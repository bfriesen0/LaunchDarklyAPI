/* 
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * OpenAPI spec version: 2.0.3
 * Contact: support@launchdarkly.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using LaunchDarklyAPI.Client;
using LaunchDarklyAPI.Api;
using LaunchDarklyAPI.Model;

namespace LaunchDarklyAPI.Test
{
    /// <summary>
    ///  Class for testing TeamMembersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TeamMembersApiTests
    {
        private TeamMembersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TeamMembersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TeamMembersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TeamMembersApi
            //Assert.IsInstanceOfType(typeof(TeamMembersApi), instance, "instance is a TeamMembersApi");
        }

        
        /// <summary>
        /// Test DeleteMember
        /// </summary>
        [Test]
        public void DeleteMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string memberId = null;
            //instance.DeleteMember(memberId);
            
        }
        
        /// <summary>
        /// Test GetMember
        /// </summary>
        [Test]
        public void GetMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string memberId = null;
            //var response = instance.GetMember(memberId);
            //Assert.IsInstanceOf<Member> (response, "response is Member");
        }
        
        /// <summary>
        /// Test GetMembers
        /// </summary>
        [Test]
        public void GetMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetMembers();
            //Assert.IsInstanceOf<Members> (response, "response is Members");
        }
        
        /// <summary>
        /// Test PatchMember
        /// </summary>
        [Test]
        public void PatchMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string memberId = null;
            //List<PatchOperation> patchDelta = null;
            //var response = instance.PatchMember(memberId, patchDelta);
            //Assert.IsInstanceOf<Member> (response, "response is Member");
        }
        
        /// <summary>
        /// Test PostMembers
        /// </summary>
        [Test]
        public void PostMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<MembersBody> membersBody = null;
            //instance.PostMembers(membersBody);
            
        }
        
    }

}
