/* 
 * LaunchDarkly REST API
 *
 * Build custom integrations with the LaunchDarkly REST API
 *
 * OpenAPI spec version: 2.0.3
 * Contact: support@launchdarkly.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using LaunchDarklyAPI.Client;
using LaunchDarklyAPI.Api;
using LaunchDarklyAPI.Model;

namespace LaunchDarklyAPI.Test
{
    /// <summary>
    ///  Class for testing ProjectsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProjectsApiTests
    {
        private ProjectsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProjectsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProjectsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProjectsApi
            //Assert.IsInstanceOfType(typeof(ProjectsApi), instance, "instance is a ProjectsApi");
        }

        
        /// <summary>
        /// Test DeleteProject
        /// </summary>
        [Test]
        public void DeleteProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectKey = null;
            //instance.DeleteProject(projectKey);
            
        }
        
        /// <summary>
        /// Test GetProject
        /// </summary>
        [Test]
        public void GetProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectKey = null;
            //var response = instance.GetProject(projectKey);
            //Assert.IsInstanceOf<Project> (response, "response is Project");
        }
        
        /// <summary>
        /// Test GetProjects
        /// </summary>
        [Test]
        public void GetProjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetProjects();
            //Assert.IsInstanceOf<Projects> (response, "response is Projects");
        }
        
        /// <summary>
        /// Test PatchProject
        /// </summary>
        [Test]
        public void PatchProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string projectKey = null;
            //List<PatchOperation> patchDelta = null;
            //var response = instance.PatchProject(projectKey, patchDelta);
            //Assert.IsInstanceOf<Project> (response, "response is Project");
        }
        
        /// <summary>
        /// Test PostProject
        /// </summary>
        [Test]
        public void PostProjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProjectBody projectBody = null;
            //instance.PostProject(projectBody);
            
        }
        
    }

}
